http:
  services:
    grist:
      loadBalancer:
        servers:
          - url: 'http://127.0.0.1:{{ env "GRIST_PORT" }}'
    dex:
      loadBalancer:
        servers:
          - url: 'http://127.0.0.1:{{ env "EXT_PORT" }}'
    tfa:
      loadBalancer:
        servers:
          - url: 'http://127.0.0.1:{{ env "TFA_PORT" }}'
    whoami:
      loadBalancer:
        servers:
          - url: 'http://127.0.0.1:{{ env "WHOAMI_PORT" }}'

  middlewares:
    tfa:
      forwardauth:
        address: 'http://127.0.0.1:{{ env "TFA_PORT" }}'
        authResponseHeaders: [ "X-Forwarded-User" ]

  routers:
    route-grist-login:
      rule: "PathPrefix(`/auth/login`)"
      service: grist
      middlewares:
        - tfa
      entryPoints:
        - web
    route-grist-auth:
      rule: "PathPrefix(`/_oauth`)"
      service: grist
      middlewares:
        - tfa
      entryPoints:
        - web
    route-grist:
      rule: "PathPrefix(`/`)"
      service: grist
      entryPoints:
        - web
    route-signed-out:
      rule: "PathPrefix(`/signed-out`)"
      service: grist
      entryPoints:
        - web
    route-api:
      rule: "PathPrefix(`/api`)"
      service: grist
      entryPoints:
        - web
    route-api-org:
      rule: "PathPrefix(`/o/{org:[^/]+}/api`)"
      service: grist
      entryPoints:
        - web
    route-assets:
      rule: "PathPrefix(`/v/unknown`)"
      service: grist
      entryPoints:
        - web
    route-dex:
      rule: "PathPrefix(`/dex`)"
      service: dex
      entryPoints:
        - web
    route-who:
      rule: "PathPrefix(`/who`)"
      service: whoami
      entryPoints:
        - web

{{ $host := env "APP_HOST" }}
{{if ne $host "localhost" }}
    https-route-grist-login:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/auth/login`)"
      service: grist
      middlewares:
        - tfa
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    https-route-grist-auth:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/_oauth`)"
      service: grist
      middlewares:
        - tfa
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    https-route-grist:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/`)"
      service: grist
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    https-route-signed-out:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/signed-out`)"
      service: grist
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    https-route-api:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/api`)"
      service: grist
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    https-route-api-org:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/o/{org:[^/]+}/api`)"
      service: grist
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    https-route-assets:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/v/unknown`)"
      service: grist
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    https-route-dex:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/dex`)"
      service: dex
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    https-route-who:
      rule: "Host(`{{ env "APP_HOST" }}`) && PathPrefix(`/who`)"
      service: whoami
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
{{end}}
